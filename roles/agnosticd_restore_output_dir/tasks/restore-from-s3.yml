---
- name: Get output dir archive from s3
  amazon.aws.aws_s3:
    aws_access_key: "{{ agnosticd_save_output_dir_s3_access_key_id }}"
    aws_secret_key: "{{ agnosticd_save_output_dir_s3_secret_access_key }}"
    bucket: "{{ agnosticd_save_output_dir_s3_bucket }}"
    dest: >-
      {{ agnosticd_output_dir }}/restore.tar.gz
      {{- '.gpg' if agnosticd_save_output_dir_archive_password is defined else '' -}}
    mode: get
    ignore_nonexistent_bucket: true
    object: >-
      {{ agnosticd_save_output_dir_archive }}
      {{- '.gpg' if agnosticd_save_output_dir_archive_password is defined else '' -}}
    region: "{{ agnosticd_save_output_dir_s3_region }}"
  register: r_get_output_dir_archive
  failed_when: >-
    r_get_output_dir_archive is failed
    and 'does not exist' not in r_get_output_dir_archive.msg
    and 'Could not find the key' not in r_get_output_dir_archive.msg

- when: >-
    agnosticd_save_output_dir_archive_password is defined
    and
    (agnosticd_output_dir ~ '/restore.tar.gz.gpg') is file
  name: Decrypt archive
  command: >-
    gpg --decrypt --batch --yes --passphrase-fd 0
    --output {{ agnosticd_output_dir }}/restore.tar.gz
    {{ agnosticd_output_dir }}/restore.tar.gz.gpg
  args:
    chdir: "{{ agnosticd_output_dir }}"
    stdin: "{{ agnosticd_save_output_dir_archive_password }}"

- name: Restore output dir from archive
  when: >-
    (agnosticd_output_dir ~ '/restore.tar.gz') is file
  ansible.builtin.unarchive:
    src: "{{ agnosticd_output_dir }}/restore.tar.gz"
    dest: "{{ agnosticd_output_dir }}"
    extra_opts:
    - --strip-components=1

- name: Remove archive file from output dir
  ansible.builtin.file:
    path: "{{ agnosticd_output_dir }}/restore.tar.gz"
    state: absent

- name: Remove encrypted archive file from output dir
  ansible.builtin.file:
    path: "{{ agnosticd_output_dir }}/restore.tar.gz.gpg"
    state: absent
